---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ORDERER_DOMAIN}}
  name: orderer{{ORDERER_INDEX}}-{{ORDERER}}
spec:
  serviceName: orderer{{ORDERER_INDEX}}-{{ORDERER}}
  replicas: 1
  selector:
    matchLabels:
      app: hyperledger
      role: {{ORDERER}}
      org: {{ORDERER_DOMAIN}}
      orderer-id: orderer{{ORDERER_INDEX}}-{{ORDERER}}
  template:
    metadata:
      labels:
        app: hyperledger
        role: {{ORDERER}}
        org: {{ORDERER_DOMAIN}}
        orderer-id: orderer{{ORDERER_INDEX}}-{{ORDERER}}
    spec:
      containers:
      - name: orderer{{ORDERER_INDEX}}-orderer-akc
        image: hyperledger/fabric-orderer:{{FABRIC_TAG}}
        # resources:
        #   requests:
        #     memory: "150Mi"
        #     cpu: "50m"
        #   limits:
        #     memory: "3000Mi"
        #     cpu: "2"
        command: ["sh", "-c", "orderer"]
        env:
        - name: FABRIC_LOGGING_SPEC
          #value: info
          value: DEBUG
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        # Location: The directory to store the blocks in.
        - name: ORDERER_FILELEDGER_LOCATION
          value: /var/ledger/orderer{{ORDERER_INDEX}}/orderer
        # WALDir specifies the location at which Write Ahead Logs for etcd/raft are
        # stored. Each channel will have its own subdir named after channel ID.
        - name: ORDERER_CONSENSUS_WALDIR
          value: /var/ledger/orderer{{ORDERER_INDEX}}/etcdraft/wal
        # SnapDir specifies the location at which snapshots for etcd/raft are
        # stored. Each channel will have its own subdir named after channel ID.
        - name: ORDERER_CONSENSUS_SNAPDIR
          value: /var/ledger/orderer{{ORDERER_INDEX}}/etcdraft/snapshot
        # Listen address: The IP on which to bind to listen.
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        # LocalMSPDir is where to find the private crypto material needed by the
        # orderer. It is set relative here as a default for dev environments but
        # should be changed to the real location in production.
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/{{ORDERER}}.{{ORDERER_DOMAIN}}/orderers/orderer{{ORDERER_INDEX}}-{{ORDERER}}.{{ORDERER_DOMAIN}}/msp
        # LocalMSPID is the identity to register the local MSP material with the MSP
        # manager. IMPORTANT: The local MSP ID of an orderer needs to match the MSP
        # ID of one of the organizations defined in the orderer system channel's
        # /Channel/Orderer configuration. The sample organization defined in the
        # sample configuration provided has an MSP ID of "SampleOrg".
        - name: ORDERER_GENERAL_LOCALMSPID
          value: {{ORDERER}}MSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/genesis.block
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /shared/crypto-config/{{ORDERER}}.{{ORDERER_DOMAIN}}/orderers/orderer{{ORDERER_INDEX}}-{{ORDERER}}.{{ORDERER_DOMAIN}}/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /shared/crypto-config/{{ORDERER}}.{{ORDERER_DOMAIN}}/orderers/orderer{{ORDERER_INDEX}}-{{ORDERER}}.{{ORDERER_DOMAIN}}/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /shared/crypto-config/{{ORDERER}}.{{ORDERER_DOMAIN}}/orderers/orderer{{ORDERER_INDEX}}-{{ORDERER}}.{{ORDERER_DOMAIN}}/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /shared/crypto-config/{{ORDERER}}.{{ORDERER_DOMAIN}}/orderers/orderer{{ORDERER_INDEX}}-{{ORDERER}}.{{ORDERER_DOMAIN}}/tls/server.crt
        # THIS IS BROKEN: * 'General.TLS.RootCAs': source data must be an array or slice, got string
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: /shared/crypto-config/{{ORDERER}}.{{ORDERER_DOMAIN}}/orderers/orderer{{ORDERER_INDEX}}-{{ORDERER}}.{{ORDERER_DOMAIN}}/tls/tlscacerts/tls-ica-{{ORDERER}}-{{ORDERER_DOMAIN}}-7054.pem
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: /shared/crypto-config/{{ORDERER}}.{{ORDERER_DOMAIN}}/orderers/orderer{{ORDERER_INDEX}}-{{ORDERER}}.{{ORDERER_DOMAIN}}/tls/tlscacerts/tls-ica-{{ORDERER}}-{{ORDERER_DOMAIN}}-7054.pem
        # - name: ORDERER_GENERAL_LISTENPORT
        #   value: "7050"
        - name: GODEBUG
          value: netdns=go
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: 0.0.0.0:10443
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        ports:
        - containerPort: 7050
        - containerPort: 10443
        volumeMounts:
          - name: crypto-config
            mountPath: /shared
          - name: orderer{{ORDERER_INDEX}}-{{ORDERER_DOMAIN}}-pvc-akc
            mountPath: /var/ledger/orderer{{ORDERER_INDEX}}
      volumes:
      - name: crypto-config
        nfs:
          server: {{EFS_SERVER}}
          path: {{PVS_PATH}}/{{EFS_PATH}}/{{EFS_EXTEND}}/akc-ca-data/
  volumeClaimTemplates:
  - metadata:
      name: orderer{{ORDERER_INDEX}}-{{ORDERER_DOMAIN}}-pvc-akc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{STORE_CLASS}}
      resources:
        requests:
          storage: 5Gi
